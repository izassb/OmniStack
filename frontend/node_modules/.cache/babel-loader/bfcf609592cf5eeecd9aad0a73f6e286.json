{"ast":null,"code":"var _jsxFileName = \"/home/izabelly/semanaoministack/frontend/src/app.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport api from './services/api';\nimport './global.css';\nimport './app.css';\nimport './sidebar.css';\nimport './main.css';\nimport DevItem from \"./componentes/DevItem\"; //{ useState } \n//useState: funçao criada pelo react p usar um estado\n// Componente: função que retorna algum conteúdo html/css/js (propriedades da página independentes - propriedades repetitivas) \n// Bloco isolado de html, css e js; o qual não interfere no restante da aplicação \n// colocar cada componente em uma página, importar react e exportar o componente\n// função SEMPRE com a letra maiuscula \n// Estado: informação que o componente vai manipular\n//Informações mantidas pelo componente(imutabilidade)\n// Propriedade: passar atributo pra um componente no react (titulo - header)\n// informações que um componente PAI passa para o componente filho\n//import Header from \"./header\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [devs, setDevs] = useState([]);\n  const [github_username, setGithubUsername] = useState('');\n  const [techs, setTechs] = useState('');\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setLatitude(latitude);\n      setLongitude(longitude);\n    }, err => {\n      console.log(err);\n    }, {\n      timeout: 30000\n    }); //vetor vazio: funçao executa uma unica vez\n  }, []); //use effect serve para dispararmos uma função toda vez que uma informação alterar \n  // recebe dois parâmetros: qual funçao executar, quando executar\n  //componente: App\n  //const [counter, setCounter] = useState(0);\n  // []desestruturação\n  //let counter = 0;\n  //let e nao const pq vai mudar o valor \n  //function incrementCounter() {\n  //setCounter(counter + 1);\n  //}\n  //toda função que é propria de um componente a gente cria ela dentro dele mesmo\n\n  useEffect(() => {\n    async function loadDevs() {\n      const response = await api.get('/devs');\n      setDevs(response.data);\n    }\n\n    loadDevs();\n  }, []);\n\n  async function handleAddDev(e) {\n    e.preventDefault();\n    const response = await api.post('/devs', {\n      github_username,\n      techs,\n      latitude,\n      longitude\n    });\n    setGithubUsername('');\n    setTechs('');\n    setDevs([...devs, response.data]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: devs.map(dev =>\n        /*#__PURE__*/\n        //mesma coisa de {return()}\n        _jsxDEV(DevItem, {\n          dev: dev\n        }, dev._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this) //aside(sidebar)\n  //main(conteudo principal da aplicação)\n  //<>\n  //<h1>Contador: {counter}</h1>\n  //<button onClick={incrementCounter}>Incrementar</button>\n  //</>\n  //variavel sendo utilizada no contador \n  //fragment\"\n  ;\n} //global.css : estilizaçoes globais que eu quero que aplique em todo meu projeto\n//app.css : css de estilização diretamente do app.js\n\n\n_s(App, \"p6j4atkl87gwlQm6UQKsHGpfUt0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/izabelly/semanaoministack/frontend/src/app.js"],"names":["React","useState","useEffect","api","DevItem","App","devs","setDevs","github_username","setGithubUsername","techs","setTechs","latitude","setLatitude","longitude","setLongitude","navigator","geolocation","getCurrentPosition","position","coords","err","console","log","timeout","loadDevs","response","get","data","handleAddDev","e","preventDefault","post","map","dev","_id"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\"; \nimport api from './services/api';\n\nimport './global.css'; \nimport './app.css'\nimport './sidebar.css'; \nimport './main.css'; \nimport DevItem from \"./componentes/DevItem\";\n\n//{ useState } \n//useState: funçao criada pelo react p usar um estado\n\n// Componente: função que retorna algum conteúdo html/css/js (propriedades da página independentes - propriedades repetitivas) \n// Bloco isolado de html, css e js; o qual não interfere no restante da aplicação \n// colocar cada componente em uma página, importar react e exportar o componente\n// função SEMPRE com a letra maiuscula \n\n// Estado: informação que o componente vai manipular\n//Informações mantidas pelo componente(imutabilidade)\n\n// Propriedade: passar atributo pra um componente no react (titulo - header)\n// informações que um componente PAI passa para o componente filho\n\n\n//import Header from \"./header\";\n\nfunction App() {\nconst [devs,setDevs] = useState([]);\n\nconst [github_username, setGithubUsername] = useState('');\nconst [techs, setTechs] = useState('');\nconst [latitude, setLatitude] = useState('');\nconst [longitude, setLongitude] = useState('');\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const { latitude, longitude } = position.coords;\n\n        setLatitude(latitude);\n        setLongitude(longitude);\n      },\n      (err) => {\n        console.log(err);\n      },\n      {\n        timeout: 30000,\n      }\n    )\n    //vetor vazio: funçao executa uma unica vez\n  }, []);\n  //use effect serve para dispararmos uma função toda vez que uma informação alterar \n  // recebe dois parâmetros: qual funçao executar, quando executar\n  \n  //componente: App\n\n  //const [counter, setCounter] = useState(0);\n  \n  // []desestruturação\n  //let counter = 0;\n  //let e nao const pq vai mudar o valor \n\n  //function incrementCounter() {\n    //setCounter(counter + 1);\n  //}\n  //toda função que é propria de um componente a gente cria ela dentro dele mesmo\n  \n  useEffect(() => {\n    async function loadDevs() {\n      const response = await api.get('/devs')\n\n      setDevs(response.data);\n    }\n\n    loadDevs();\n  }, []);\n\n  async function handleAddDev(e) {\n    e.preventDefault();\n\n    const response = await api.post('/devs', {\n      github_username,\n      techs,\n      latitude,\n      longitude,\n    })\n\n    setGithubUsername('');\n    setTechs('');\n\n    setDevs([...devs, response.data]);\n  }\n\n  return (\n    <div id=\"app\">\n      <aside>\n        <strong>Cadastrar</strong>\n        \n      </aside>\n      <main>\n        <ul>\n          {devs.map(dev => (\n            //mesma coisa de {return()}\n              <DevItem key={dev._id} dev={dev} />\n          ))}\n        </ul>\n      </main>\n    </div>\n\n    //aside(sidebar)\n    //main(conteudo principal da aplicação)\n    //<>\n      //<h1>Contador: {counter}</h1>\n      //<button onClick={incrementCounter}>Incrementar</button>\n    //</>\n    //variavel sendo utilizada no contador \n    //fragment\"\n  );\n\n}\n\n//global.css : estilizaçoes globais que eu quero que aplique em todo meu projeto\n//app.css : css de estilização diretamente do app.js\n\nexport default App;"]},"metadata":{},"sourceType":"module"}